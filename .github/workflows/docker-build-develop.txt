name: Test and Build Python Image to ECR

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Streamlit sanity check
        run: |
          streamlit --version
          python -m pytest || echo "Tests not configured, skipping..."

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set IMAGE_TAG based on branch
        id: set-tag
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "tag=prod-latest" >> $GITHUB_OUTPUT
          elif [[ "${{ github.base_ref }}" == "develop" ]]; then
            echo "tag=dev-latest" >> $GITHUB_OUTPUT
          else
            echo "tag=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
          ECR_REPOSITORY: streamlit-app
          IMAGE_TAG: ${{ steps.set-tag.outputs.tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG